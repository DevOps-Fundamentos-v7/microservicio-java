name: CI-MICROSERVICIOS-JAVA-DANTONBUSTOS
on:
  push:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
      - name: Clonacion de codigo
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '8'
          distribution: 'temurin'
      
      - name: Compilacion
        run: |
          mvn package

      - name: Ejecucion Test Unitarios
        run: |
          mvn package test
     
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Analisis SonarCloud
        run: |
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=dantonbustos \
          -Dsonar.projectKey=dantonbustos_microservicio-java

      - name: SonarQube Quality Gate Check
        # You may pin to the exact commit or the version.
        # uses: SonarSource/sonarqube-quality-gate-action@d304d050d930b02a896b0f85935344f023928496
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        with:
          # Location of the scanner metadata report file
          scanMetadataReportFile: target/sonar/report-task.txt
          
          
      - name: Docker Login
        uses: docker/login-action@v3.1.0
        with:
          username: dantonbustos
          password: ${{ secrets.DOCKER_PASS }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      
      - name: Docker build
        run: | 
          docker build -t dantonbustos/microservicio-java:latest .
          
          
      - name: Docker push
        run: | 
          docker push dantonbustos/microservicio-java:latest

  deploy:
    needs: build
    runs-on: self-hosted

    steps:

      - name: Clonacion de codigo
        uses: actions/checkout@v4
      
      - name: Despliegue
        run: |
          kubectl apply -f deploy.yaml
